#
#* Простая нейронная сеть для умножения на 2

#* 1. 
#* Ниже я импортирую нужные библиотеки.
from keras.layers import Dense #& Количество нейронов в слое.
from keras.models import Sequential #& Обобщение нейронов в сеть.
import numpy as np #& Библиотека для лучшей обработки данных.
import matplotlib.pyplot as plt
#* 2. 
#* Создадим 2 набора данных: исходный и тот, который должен получиться после обработки исходного
#* (в нашем случае он будет содержать числа из исходного массива *2 ).

#! Все массивы обязательно оборачивать в numpy array 
Source = np.array([[1],[2],[3],[4],[5],[6],[7],[8],[9],[10]]) #& Исходный массив данных.
Result = np.array([2,4,6,8,10,12,14,16,18,20]).T #& Массив, который в идеале долженг получиться после обработки исходного.

#* 3. 
#* Создадим саму модель и зададим ее параметры.

#& Количество слоев задаестся в массиве Sequential.
#& A количество нейронов для каждого слоя - в Dense.
#& input_shape - Сколько входов принимается слоем.
model = Sequential([
    Dense(1,input_shape=(1,),activation="linear") 
])
model.summary() #& Мы задали модель

#* 4.
#* Оптимизируем модель.
model.compile(optimizer="sgd",loss="mse",metrics="mae")

#* 5.
#* Обучение на 100 эпохах, т.е нейронная сеть 500 раз посмотрит на данные и обучится на них.
model.fit(Source,Result,epochs=100,verbose=0)

#*6.
#*Предскажем результат для умножения числа 100.
result = model.predict(np.array([500]))
print(f"Результат предсказания для числа 500*2:")
print(*result[0])
